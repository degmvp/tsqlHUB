WITH LastRestores AS
(
SELECT
    [d].[name] as DatabaseName,
    [d].[create_date],
    r.restore_date,
	r.user_name,
	r.restore_type,
	r.replace,
    ROW_NUMBER() OVER (PARTITION BY d.Name ORDER BY r.[restore_date] DESC) as rn
FROM master.sys.databases d
LEFT OUTER JOIN msdb.dbo.[restorehistory] r ON r.[destination_database_name] = d.Name
)
SELECT
	LastRestores.DatabaseName,
	LastRestores.create_date,
	LastRestores.restore_date,
	LastRestores.user_name,
	LastRestores.restore_type,
	LastRestores.replace
FROM [LastRestores]
WHERE [rn] = 1
ORDER BY LastRestores.restore_date DESC

---------------------------------------------------
SELECT t.name AS TableName,
       p.rows AS RowCounts,
       SUM(a.total_pages) * 8 AS TotalSpaceKB,
       SUM(a.used_pages) * 8 AS UsedSpaceKB,
       (SUM(a.total_pages) - SUM(a.used_pages)) * 8 AS UnusedSpaceKB
FROM sys.tables t
    INNER JOIN sys.indexes i
        ON t.object_id = i.object_id
    INNER JOIN sys.partitions p
        ON i.object_id = p.object_id
           AND i.index_id = p.index_id
    INNER JOIN sys.allocation_units a
        ON p.partition_id = a.container_id
    LEFT OUTER JOIN sys.schemas s
        ON t.schema_id = s.schema_id
--WHERE t.name = 'Table Name'
GROUP BY t.name,
         p.rows
ORDER BY TotalSpaceKB DESC;
-------------------------------------------------------------
select
	 s.[name] + '.' + t.[name] as [table_name]
	,i.[name] as [index_name]
	,iu.user_seeks
	,iu.user_lookups
	,iu.user_scans
	,iu.user_updates
from
	sys.tables as t
inner join
	sys.schemas as s
		on t.[schema_id] = s.[schema_id]
inner join
	sys.indexes as i
		on t.[object_id] = i.[object_id]
inner JOIN
	sys.dm_db_index_usage_stats as iu
		ON i.[object_id] = iu.[object_id]
		AND i.[index_id] = iu.[index_id]
where
	i.is_disabled = 0 -- not disabled
and
	i.[type] <> 0 -- not HEAP
and
	i.is_primary_key = 0 -- not primary key
and
	i.is_unique = 0
and
	i.is_unique_constraint = 0 -- not part of unique constraint
order by
	iu.user_seeks, iu.user_lookups, iu.user_scans, iu.user_updates desc
	-------------------------------------------------------------------
SELECT main.TABLE_NAME,
       main.COLUMN_NAME,
       main.DATA_TYPE,
       main.CURRENT_IDENTITY,
       main.MAXIMUM_IDENTITY,
       (main.CURRENT_IDENTITY / main.MAXIMUM_IDENTITY) * 100 AS PERCENT_USED
FROM
(
    SELECT c.TABLE_NAME,
           c.COLUMN_NAME,
           c.DATA_TYPE,
           IDENT_CURRENT(c.TABLE_SCHEMA + '.' + c.TABLE_NAME) AS CURRENT_IDENTITY,
           CASE
               WHEN c.DATA_TYPE = 'int' THEN
                   2147483647
               WHEN c.DATA_TYPE = 'bigint' THEN
                   9223372036854775807
           END AS MAXIMUM_IDENTITY
    FROM INFORMATION_SCHEMA.COLUMNS c
        LEFT JOIN INFORMATION_SCHEMA.VIEWS v
            ON c.TABLE_SCHEMA = v.TABLE_SCHEMA
               AND c.TABLE_NAME = v.TABLE_NAME
    WHERE v.TABLE_NAME IS NULL
          AND COLUMNPROPERTY(OBJECT_ID(c.TABLE_SCHEMA + '.' + c.TABLE_NAME), c.COLUMN_NAME, 'IsIdentity') = 1
) main
ORDER BY PERCENT_USED DESC;
------------------------------------------